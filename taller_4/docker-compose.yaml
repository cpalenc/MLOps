version: '3'
services: 

  app:
    image: "danielchavarro/taller_3-app"
    ports:
      - "7000:7000"  # Map port 7000 of the container to port 7000 on your host
    volumes:
      - ./data:/data_model  
    depends_on:
      - mlflow_serv
      - minio
    environment:
      MLFLOW_URI: "http://mlflow_serv:5000"
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: supersecret



  minio:
    container_name: Minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=supersecret
    image: quay.io/minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./minio:/data
    restart: unless-stopped



  mysql:
    image: mysql:latest
    ports:
      - "8082:3306"
    environment:
      MYSQL_ROOT_PASSWORD: airflow
      MYSQL_DATABASE: cover_type
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: always
    stdin_open: true 
    tty: true        
    volumes:
      - mysql_data:/var/lib/mysql

  mlflow_serv:
    image: continuumio/miniconda3:latest  # Use the latest Miniconda image for flexibility
    ports:
      - "5000:5000"  # Map port 5000 of the container to port 5000 on your host
    volumes:
      - ./mlflow:/mlflow  # Mount the `mlflow` directory on your host to store artifacts
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000  # Set tracking URI
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000  # Set Minio endpoint for artifacts
      - AWS_ACCESS_KEY_ID=admin  # Minio access credentials (replace with your own)
      - AWS_SECRET_ACCESS_KEY=supersecret  # Replace with a secure password
    command: >  # Use a multi-line command
      bash -c "
        conda install -c conda-forge mlflow  # Install MLflow
        mlflow server --host 0.0.0.0 --backend-store-uri sqlite:////mlflow/mlflow.db --default-artifact-root s3://mlflow/artifacts
      "  


  #mlflow_serv:
  #  build:
  #    context: .
  #    dockerfile: Dockerfile_mlflow
  #  ports:
  #    - "5000:5000" 
  #  command: >
  #    mlflow server
  #    --backend-store-uri mysql+pymysql://root:airflow@mysql:3306/mlflow
  #    --default-artifact-root s3://mlflows3
  #    --host 0.0.0.0
  #    --port 5000
  #    --serve-artifacts
  #

  #  depends_on:
  #    - mysql
  #    - minio
  #  environment:
  #    MLFLOW_TRACKING_URI: http://mlflow:5000
  #   MLFLOW_S3_ENDPOINT_URL: http://minio:9000
  #    AWS_ACCESS_KEY_ID: admin
  #    AWS_SECRET_ACCESS_KEY: supersecret

  #  healthcheck:
  #    test: ["CMD", "curl", "-f"]
  #    interval: 30s
  #    timeout: 10s
  #    retries: 3
  # networks:
  #    - network_1



volumes:
  minio-data:
  mysql_data:

networks:
  network_1:
    driver: bridge